# This dockerfile defines the environment for Cirrus-CI when
# running automated checks and tests. It may also be used
# for development/debugging or manually building most
# Makefile targets.

ARG FEDORA_RELEASE=latest
FROM registry.fedoraproject.org/fedora:${FEDORA_RELEASE}
ARG PACKER_VERSION
MAINTAINER https://github.com/containers/automation_images/ci

ENV CIRRUS_WORKING_DIR=/tmp/automation_images \
    PACKER_INSTALL_DIR=/usr/local/bin \
    PACKER_VERSION=$PACKER_VERSION \
    CONTAINER=1

# When using the dockerfile-as-ci feature of Cirrus-CI, it's unsafe
# to rely on COPY or ADD instructions.  See documentation for warning.
RUN test -n "$PACKER_VERSION"
RUN dnf update -y && \
    dnf mark remove $(rpm -qa | grep -Ev '(gpg-pubkey)|(dnf)|(sudo)') && \
    dnf install -y --exclude selinux-policy-targeted \
        ShellCheck \
        bash-completion \
        coreutils \
        curl \
        findutils \
        gawk \
        git \
        jq \
        make \
        openssh-clients \
        python3-pyyaml \
        rootfiles \
        rsync \
        sed \
        tar \
        util-linux \
        unzip \
        && \
    dnf mark install dnf sudo $_ && \
    dnf autoremove -y && \
    dnf clean all

# There's no simply way to install a automation-library version that's
# consistent with other environments via use of the ../lib.sh specification.
# Just use the "latest" version and assume it will work for this containers context.
RUN url='https://github.com/containers/automation/releases/latest/download/install_automation.sh' && \
    export INSTALL_PREFIX=/usr/share && \
    curl -sL "$url" | bash -s latest

# Must duplicate this from Makefile to avoid using any COPY|ADD instructions
RUN curl -L --silent --show-error -o /tmp/packer.zip \
        https://releases.hashicorp.com/packer/$PACKER_VERSION/packer_${PACKER_VERSION}_linux_amd64.zip && \
    cd $PACKER_INSTALL_DIR && \
    unzip -o /tmp/packer.zip && \
    touch packer && \
    rm -f /tmp/packer.zip
