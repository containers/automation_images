---

variables:  # Empty value means it must be passed in on command-line
    # GCE Project ID where images will be produced
    GCP_PROJECT_ID: "libpod-218412"
    # Pre-existing google storage bucket w/ very short lifecycle enabled
    XFERBUCKET: "packer-import"
    # Required path to service account credentials file
    GAC_FILEPATH: "{{env `GAC_FILEPATH`}}"
    # Required for presenting output from qemu builders
    TTYDEV:
    # Required for 'make clean' support and not clobbering a memory-backed /tmp
    TEMPDIR:
    # Naming suffix for images to prevent clashes
    IMG_SFX:

    # Allows providing handy cross-reference to the build log
    CIRRUS_TASK_ID: "{{env `CIRRUS_TASK_ID`}}"

    # See Makefile for definitions
    FEDORA_RELEASE: "{{env `FEDORA_RELEASE`}}"
    FEDORA_IMAGE_URL: "{{env `FEDORA_IMAGE_URL`}}"
    FEDORA_CSUM_URL: "{{env `FEDORA_CSUM_URL`}}"

    PRIOR_FEDORA_RELEASE: "{{env `PRIOR_FEDORA_RELEASE`}}"
    PRIOR_FEDORA_IMAGE_URL: "{{env `PRIOR_FEDORA_IMAGE_URL`}}"
    PRIOR_FEDORA_CSUM_URL: "{{env `PRIOR_FEDORA_CSUM_URL`}}"

    DEBIAN_RELEASE: "{{env `DEBIAN_RELEASE`}}"
    DEBIAN_BASE_FAMILY: "{{env `DEBIAN_BASE_FAMILY`}}"


builders:
    - name: 'debian'
      type: 'googlecompute'
      # Prefix IMG_SFX with "b" so this is never confused with a cache_image name
      image_name: '{{build_name}}-b{{user `IMG_SFX`}}'
      image_family: '{{build_name}}-base'
      image_description: 'Built in https://cirrus-ci.com/task/{{user `CIRRUS_TASK_ID`}}'
      source_image_family: '{{user `DEBIAN_BASE_FAMILY`}}'
      source_image_project_id: 'debian-cloud'
      project_id: '{{user `GCP_PROJECT_ID`}}'
      # Can't use env. var for this, googlecompute-import only supports filepath
      account_file: '{{user `GAC_FILEPATH`}}'
      zone: 'us-central1-a'
      disk_size: 20
      # Identify the instance
      labels: &imgcpylabels
        sfx: '{{user `IMG_SFX`}}'
        src: '{{user `DEBIAN_BASE_FAMILY`}}'
        stage: 'base'
        arch: 'x86_64'
        release: 'debian-{{user `DEBIAN_RELEASE` | clean_resource_name}}'
      # Gotcha: https://www.packer.io/docs/builders/googlecompute#gotchas
      ssh_username: 'packer'
      temporary_key_pair_type: ed25519
      ssh_clear_authorized_keys: true

    - &qemu_virt
      name: 'fedora'
      type: 'qemu'
      accelerator: "kvm"
      qemu_binary: '/usr/libexec/qemu-kvm'  # Unique to CentOS, not fedora :(
      memory: 12288
      iso_url: '{{user `FEDORA_IMAGE_URL`}}'
      disk_image: true
      format: "raw"
      disk_size: 10240
      iso_checksum: 'file:{{user `FEDORA_CSUM_URL`}}'
      vm_name: "disk.raw"  # actually qcow2, name required for post-processing
      output_directory: '{{ user `TEMPDIR` }}/{{build_name}}' # /<vm_name>.disk.raw
      boot_wait: '5s'
      shutdown_command: 'shutdown -h now'
      headless: true
      # qemu_binary: "/usr/libexec/qemu-kvm"
      qemuargs:  # List-of-list format required to override packer-generated args
        - - "-display"
          - "none"
        - - "-device"
          - "virtio-rng-pci"
        - - "-chardev"
          - "file,id=pts,path={{user `TTYDEV`}}"
        - - "-device"
          - "isa-serial,chardev=pts"
        - - "-netdev"
          - "user,id=net0,hostfwd=tcp::{{ .SSHHostPort }}-:22"
        - - "-device"
          - "virtio-net,netdev=net0"
      cd_label: "cidata"
      cd_files:
        - '{{user `TEMPDIR`}}/meta-data'
        - '{{user `TEMPDIR`}}/user-data'
      communicator: 'ssh'
      pause_before_connecting: '10s'
      ssh_private_key_file: '{{ user `TEMPDIR` }}/cidata.ssh'
      ssh_disable_agent_forwarding: true
      ssh_username: 'root'
      ssh_timeout: '5m'
      vnc_bind_address: 0.0.0.0

    - <<: *qemu_virt
      name: 'prior-fedora'
      iso_url: '{{user `PRIOR_FEDORA_IMAGE_URL`}}'
      iso_checksum: 'file:{{user `PRIOR_FEDORA_CSUM_URL`}}'

    # ref: https://www.packer.io/plugins/builders/amazon/ebs
    - &fedora-aws
      name: 'fedora-aws'
      type: 'amazon-ebs'
      source_ami_filter:
        # Many of these search filter values (like account ID and name) aren't publicized
        # anywhere.  They were found by examining AWS EC2 AMIs published/referenced from
        # the AWS sections on https://fedoraproject.org/cloud/download
        owners:
            - &fedora_accountid 125523088429
        most_recent: true  # Required b/c >1 search result likely to be returned
        filters: &ami_filters
            architecture: 'x86_64'
            image-type: 'machine'
            is-public: 'true'
            name: 'Fedora-Cloud-Base*-{{user `FEDORA_RELEASE`}}-*'
            root-device-type: 'ebs'
            state: 'available'
            virtualization-type: 'hvm'
      instance_type: 'm5zn.metal'
      # In case of packer problem or ungraceful exit, don't wait for shutdown.
      # This doesn't always work properly, sometimes leaving EC2 instances in
      # a 'stopped' instead of terminated state :(
      shutdown_behavior: 'terminate'
      # If something goes wrong, remove the broken AMI.
      force_deregister: true  # Remove AMI with same name if exists
      force_delete_snapshot: true  # Also remove snapshots of force-removed AMI
      # Required for network access, must be the 'default' group used by Cirrus-CI
      security_group_id: "sg-042c75677872ef81c"
      # Prefix IMG_SFX with "b" so this is never confused with a cache_image
      ami_name: &ami_name '{{build_name}}-b{{user `IMG_SFX`}}'
      ami_description: 'Built in https://cirrus-ci.com/task/{{user `CIRRUS_TASK_ID`}}'
      ebs_optimized: true
      launch_block_device_mappings:
        - device_name: '/dev/sda1'
          volume_size: 20
          volume_type: 'gp2'
          delete_on_termination: true
      # These are critical and used by security-polciy to enforce instance launch limits.
      tags: &awstags
        <<: *imgcpylabels
        # EC2 expects "Name" to be capitalized
        Name: *ami_name
        src: '{{.SourceAMI}}'
        automation: 'true'
        release: 'fedora-{{user `FEDORA_RELEASE`}}'
      run_tags: *awstags
      run_volume_tags: *awstags
      snapshot_tags: *awstags
      # This is necessary for security - The CI service accounts are not permitted
      # to use AMI's from any other account, including public ones.
      ami_users:
        - &accountid '449134212816'
      ssh_username: 'fedora'
      ssh_clear_authorized_keys: true
      # N/B: Required Packer >= 1.8.0
      # https://github.com/hashicorp/packer/issues/10074#issuecomment-1070469367
      temporary_key_pair_type: 'ed25519'

    - <<: *fedora-aws
      name: 'fedora-aws-arm64'
      source_ami_filter:
        owners:
            - *fedora_accountid
        most_recent: true  # Required b/c >1 search result likely to be returned
        filters:
            <<: *ami_filters
            architecture: 'arm64'
      instance_type: 't4g.medium'  # arm64 type
      tags: &awsarm64tags
        <<: *awstags
        arch: 'arm64'
      run_tags: *awsarm64tags
      run_volume_tags: *awsarm64tags
      snapshot_tags: *awsarm64tags


provisioners:  # Debian images come bundled with GCE integrations provisioned
    - type: 'shell'
      inline:
        - 'set -e'
        - 'mkdir -p /var/tmp/automation_images'

    - type: 'file'
      source: '{{ pwd }}/'
      destination: '/var/tmp/automation_images/'

    - except: ['debian']
      type: 'shell'
      inline:
        - 'set -e'
        - '/bin/bash /var/tmp/automation_images/base_images/fedora_base-setup.sh'

    - only: ['debian']
      type: 'shell'
      inline:
        - 'set -e'
        - 'env DEBIAN_FRONTEND=noninteractive DEBIAN_RELEASE={{user `DEBIAN_RELEASE`}} /bin/bash /var/tmp/automation_images/base_images/debian_base-setup.sh'

post-processors:
    # Must be double-nested to guarantee execution order
    - - only: ['fedora', 'prior-fedora']
        type: "compress"
        output: '{{ user `TEMPDIR` }}/{{build_name}}/disk.raw.tar.gz'
        format: '.tar.gz'
        compression_level: 9
      - &gcp_import
        only: ['fedora']
        type: "googlecompute-import"
        project_id: '{{user `GCP_PROJECT_ID`}}'
        account_file: '{{user `GAC_FILEPATH`}}'
        bucket: '{{user `XFERBUCKET`}}'
        gcs_object_name: '{{build_name}}-{{user `IMG_SFX`}}.tar.gz'
        image_name: "fedora-b{{user `IMG_SFX`}}"
        image_family: '{{build_name}}-base'
        image_description: 'Built in https://cirrus-ci.com/task/{{user `CIRRUS_TASK_ID`}}'
        image_labels:
          <<: *imgcpylabels
          src: 'fedoraproject'
          release: 'fedora-{{user `FEDORA_RELEASE`}}'
      - <<: *gcp_import
        only: ['prior-fedora']
        image_name: "prior-fedora-b{{user `IMG_SFX`}}"
        image_family: '{{build_name}}-base'
        image_description: '{{user `PRIOR_FEDORA_IMAGE_URL`}}'
        image_labels:
          <<: *imgcpylabels
          src: 'fedoraproject'
          release: 'fedora-{{user `PRIOR_FEDORA_RELEASE`}}'
      # This is critical, especially for the aws builders.
      # Producing the cache-images from these base images
      # needs to lookup the runtime-produced AMI ID.
      - type: 'manifest'
        output: 'base_images/manifest.json'  # Collected by Cirrus-CI
        strip_path: true
        custom_data:
            IMG_SFX: '{{ user `IMG_SFX` }}'
            STAGE: base
            TASK: '{{user `CIRRUS_TASK_ID`}}'
